from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import os

TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("‚ùå BOT_TOKEN environment variable ‡¶®‡ßá‡¶á!")

# /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø Render-‡¶è ‡¶π‡ßã‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ Telegram Bot üöÄ")

# /help ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üõ† Available commands:\n/start\n/help\n/echo <text>")

# /echo ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = " ".join(context.args)
    if text:
        await update.message.reply_text(f"üîÅ {text}")
    else:
        await update.message.reply_text("‚ùå ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /echo ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®")

def get_application():
    """Telegram bot application ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá return ‡¶ï‡¶∞‡ßá"""
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("echo", echo))
    return app
